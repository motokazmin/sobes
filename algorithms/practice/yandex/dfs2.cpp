/*
               РЕШИЛ НЕВЕРНО
Около Петиного университета недавно открылось новое кафе, в котором действует следующая система скидок: 
при каждой покупке более чем на 100 рублей покупатель получает купон, дающий право на один бесплатный 
обед (при покупке на сумму 100 рублей и меньше такой купон покупатель не получает).

Однажды Пете на глаза попался прейскурант на ближайшие N дней. Внимательно его изучив, он решил, что 
будет обедать в этом кафе все N дней, причем каждый день он будет покупать в кафе ровно один обед. 
Однако стипендия у Пети небольшая, и поэтому он хочет по максимуму использовать предоставляемую систему 
скидок так, чтобы его суммарные затраты были минимальны. Требуется найти минимально возможную суммарную 
стоимость обедов и номера дней, в которые Пете следует воспользоваться купонами.

Алгоритм
1. Сначала создайте список стоимости обедов на каждый из N дней.
2. Создайте пустой список для хранения дней, в которые Петя воспользуется купонами.
3. Отсортируйте список стоимости обедов в порядке убывания, чтобы начать с самых дорогих обедов.
4. Пройдитесь по списку стоимости обедов и для каждого дня, где стоимость обеда больше 100 рублей:
5. Пометьте этот день как день, в который Петя воспользуется купоном.
6. Уменьшите стоимость обеда на 100 рублей.
7. Вычислите суммарные затраты Пети на обеды, учитывая использованные купоны.
8. Выведите суммарные затраты и список дней, в которые Петя использовал купоны.

*/

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int N;
    cin >> N;
    vector<int> lunchCost(N);

    for (int i = 0; i < N; i++) {
        cin >> lunchCost[i];
    }

    vector<int> couponDays;
    long long totalCost = 0;

    for (int i = 0; i < N; i++) {
        if (lunchCost[i] > 100) {
            couponDays.push_back(i + 1);
            totalCost += lunchCost[i] - 100;
        } else {
            totalCost += lunchCost[i];
        }
    }

    cout << totalCost << endl;
    cout << couponDays.size() << " ";
    for (int day : couponDays) {
        cout << day << " ";
    }
    cout << endl;

    return 0;
}
