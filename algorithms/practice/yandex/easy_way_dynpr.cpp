/*
В каждой клетке прямоугольной таблицы NxM записано некоторое число. Изначально игрок находится в левой верхней клетке. 
За один ход ему разрешается перемещаться в соседнюю клетку либо вправо, либо вниз (влево и вверх перемещаться запрещено).
При проходе через клетку с игрока берут столько килограммов еды, какое число записано в этой клетке 
(еду берут также за первую и последнюю клетки его пути).

Требуется найти минимальный вес еды в килограммах, отдав которую игрок может попасть в правый нижний угол.
*/

#include <iostream>
#include <vector>
using namespace std;

int main() {
    int N, M;
    cin >> N >> M;

    vector<vector<int>> value(N, vector<int>(M));
    vector<vector<int>> dp(N, vector<int>(M));

    // Ввод значений в клетки
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            cin >> value[i][j];
        }
    }

    dp[0][0] = value[0][0];

    // Заполнение первой строке и первого столбца
    for (int i = 1; i < N; i++) {
        dp[i][0] = dp[i-1][0] + value[i][0];
    }

    for (int j = 1; j < M; j++) {
        dp[0][j] = dp[0][j-1] + value[0][j];
    }

    // Заполнение остальных клеток
    for (int i = 1; i < N; i++) {
        for (int j = 1; j < M; j++) {
            dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + value[i][j];
        }
    }

    cout << dp[N-1][M-1] << endl;
    
    return 0;
}
