/*

Дана прямоугольная доска NxM. В левом верхнем углу находится шахматный конь, которого необходимо переместить в 
правый нижний угол доски. В данной задаче конь может перемещаться на две клетки вниз и одну клетку вправо или 
на одну клетку вниз и две клетки вправо.
Необходимо определить, сколько существует различных маршрутов, ведущих из левого верхнего в правый нижний угол.

*/

#include <iostream>
#include <vector>

using namespace std;

int main() {
    int N, M;
    cin >> N >> M;
    vector<vector<int>> dp(N, vector<int>(M, 0));

    // Инициализация начальных значений
    dp[0][0] = 1;

    // Заполнение dp
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            if (i - 2 >= 0 && j - 1 >= 0) {
                dp[i][j] += dp[i - 2][j - 1];
            }
            if (i - 1 >= 0 && j - 2 >= 0) {
                dp[i][j] += dp[i - 1][j - 2];
            }
        }
    }

    // Вывод количества маршрутов
    cout << "Количество различных маршрутов: " << dp[N - 1][M - 1] << endl;

    return 0;
}
